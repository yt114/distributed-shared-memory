syntax = "proto3";

service PaxosProposer{
  rpc client_request(ClientRequestPacket) returns(ServerResponsePacket) {}
}

service PaxosAccepter{
  rpc Prepare(PreparePacket) returns(PromisePacket) {}
  rpc Propose(ProposePacket) returns(AcceptPacket) {}
}

message ClientRequestPacket{
  int32 client_id = 1;
  int32 client_command_id = 2;

  bool is_write = 3;
  string key = 4;
  string value = 5;
}

message ServerResponsePacket{
  int32 client_id = 1;
  int32 client_command_id = 2; //1, 2 unique identified a command

  int32 server_id = 3;
  bool is_success  = 4;
  string key = 5;
  string value = 6;
}

message PreparePacket{
  int32 log_entry = 1;
  int32 proposal_num = 2;

  int32 server_id = 3;
}

message PromisePacket{
  int32 server_id = 11;
  int32 log_entry = 10;
  bool error = 1;
  string error_message = 2;

  int32 max_proposal_num = 3;
  string accepted_id = 4;

  //define accpeted value
  int32 client_id = 5;
  int32 client_command_id = 6;
  bool is_write = 7;
  string key = 8;
  string value = 9;
}

message ProposePacket{
  int32 log_entry = 1;
  int32 proposal_num = 2;

  int32 server_id = 3;
  //define accpeted value
  int32 client_id = 4;
  int32 client_command_id = 5;
  bool is_write = 6;
  string key = 7;
  string value = 8;
}

message AcceptPacket{
  int32 log_entry = 1;
  int32 server_id = 3;

  int32 proposal_num = 2;
  bool is_error = 9;
  string error_message = 10;

  //define accpeted value
  int32 client_id = 4;
  int32 client_command_id = 5;
  bool is_write = 6;
  string key = 7;
  string value = 8;
}